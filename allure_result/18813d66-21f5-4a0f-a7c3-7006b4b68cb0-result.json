{"name": "Selenium Mini project- Locator-XPATH", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul/li[61]/div/div/div[2]/div[1]/div[1]/span/a\"}\n  (Session info: chrome=132.0.6834.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF61E98FBE5+28741]\n\t(No symbol) [0x00007FF61E8F7890]\n\t(No symbol) [0x00007FF61E794FDA]\n\t(No symbol) [0x00007FF61E7E9322]\n\t(No symbol) [0x00007FF61E7E954C]\n\t(No symbol) [0x00007FF61E833337]\n\t(No symbol) [0x00007FF61E80FF4F]\n\t(No symbol) [0x00007FF61E8300B4]\n\t(No symbol) [0x00007FF61E80FCB3]\n\t(No symbol) [0x00007FF61E7D9FB3]\n\t(No symbol) [0x00007FF61E7DB331]\n\tGetHandleVerifier [0x00007FF61ECCA73D+3414941]\n\tGetHandleVerifier [0x00007FF61ECDE64A+3496618]\n\tGetHandleVerifier [0x00007FF61ECD413D+3454365]\n\tGetHandleVerifier [0x00007FF61EA5848B+850155]\n\t(No symbol) [0x00007FF61E9037FF]\n\t(No symbol) [0x00007FF61E8FF0C4]\n\t(No symbol) [0x00007FF61E8FF25D]\n\t(No symbol) [0x00007FF61E8EE079]\n\tBaseThreadInitThunk [0x00007FFB89447374+20]\n\tRtlUserThreadStart [0x00007FFB8AC1CC91+33]", "trace": "@allure.title(\"Selenium Mini project- Locator-XPATH\")\n    @allure.description(\"TC1 - Positive TC - Click on Sales pack link \")\n    @pytest.mark.Positive\n    def test_Get_title_price():\n        driver =webdriver.Chrome()\n        driver.get(\"https://www.ebay.com/b/Desktops-All-In-One-Computers/171957/bn_1643067\")\n        #print(\"Title of the webpage:\",driver.title)\n        time.sleep(5)\n        # get total number of items in the webpage\n        ul_xpath = '//ul[@class=\"brwrvr__item-results brwrvr__item-results--list\"]'\n        ul_element = driver.find_element(By.XPATH, ul_xpath)\n        # Find all 'li' elements within the 'ul'\n        li_elements = ul_element.find_elements(By.TAG_NAME, 'li')\n        # Get the total number of 'li' elements\n        total_li = len(li_elements)\n        print(f\"Total number of 'li' elements: {total_li}\")\n    \n        for i in range(1,total_li):\n            #get xpath for the title of the item\n            xpath_1 = f\"//ul/li[{i}]/div/div/div[2]/div[1]/div[1]/span/a\"\n>           web_element_text = driver.find_element(By.XPATH, xpath_1)\n\nJan\\ex04_selenium_locator_xpath\\Task_Selenium_miniProj.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000240F147E840>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF61E8EE079]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB89447374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB8AC1CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul/li[61]/div/div/div[2]/div[1]/div[1]/span/a\"}\nE         (Session info: chrome=132.0.6834.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF61E98FBE5+28741]\nE       \t(No symbol) [0x00007FF61E8F7890]\nE       \t(No symbol) [0x00007FF61E794FDA]\nE       \t(No symbol) [0x00007FF61E7E9322]\nE       \t(No symbol) [0x00007FF61E7E954C]\nE       \t(No symbol) [0x00007FF61E833337]\nE       \t(No symbol) [0x00007FF61E80FF4F]\nE       \t(No symbol) [0x00007FF61E8300B4]\nE       \t(No symbol) [0x00007FF61E80FCB3]\nE       \t(No symbol) [0x00007FF61E7D9FB3]\nE       \t(No symbol) [0x00007FF61E7DB331]\nE       \tGetHandleVerifier [0x00007FF61ECCA73D+3414941]\nE       \tGetHandleVerifier [0x00007FF61ECDE64A+3496618]\nE       \tGetHandleVerifier [0x00007FF61ECD413D+3454365]\nE       \tGetHandleVerifier [0x00007FF61EA5848B+850155]\nE       \t(No symbol) [0x00007FF61E9037FF]\nE       \t(No symbol) [0x00007FF61E8FF0C4]\nE       \t(No symbol) [0x00007FF61E8FF25D]\nE       \t(No symbol) [0x00007FF61E8EE079]\nE       \tBaseThreadInitThunk [0x00007FFB89447374+20]\nE       \tRtlUserThreadStart [0x00007FFB8AC1CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "TC1 - Positive TC - Click on Sales pack link ", "start": 1737220013262, "stop": 1737220032858, "uuid": "2ee0e0c7-d2ae-4b69-825c-396799685553", "historyId": "ab3b57e3db82e7d5f1c50f4d48ab1a4a", "testCaseId": "ab3b57e3db82e7d5f1c50f4d48ab1a4a", "fullName": "Jan.ex04_selenium_locator_xpath.Task_Selenium_miniProj#test_Get_title_price", "labels": [{"name": "tag", "value": "Positive"}, {"name": "parentSuite", "value": "Jan.ex04_selenium_locator_xpath"}, {"name": "suite", "value": "Task_Selenium_miniProj"}, {"name": "host", "value": "DESKTOP-GA3MM47"}, {"name": "thread", "value": "1056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Jan.ex04_selenium_locator_xpath.Task_Selenium_miniProj"}]}